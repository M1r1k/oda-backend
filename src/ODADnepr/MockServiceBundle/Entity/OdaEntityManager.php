<?php

namespace ODADnepr\MockServiceBundle\Entity;

use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Component\HttpKernel\Exception\BadRequestHttpException;


/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class OdaEntityManager
{
    /* @var ObjectManager */
    protected $entityManager;

    /**
     * Constructor.
     *
     * @param ObjectManager $entityManager
     */
    public function __construct(ObjectManager $entityManager)
    {
        $this->entityManager = $entityManager;
    }

    public function setAddress(\stdClass $address)
    {
        $repo = $this->entityManager->getRepository('ODADneprMockServiceBundle:Address');
        if (!($address_entity = $repo->find($address->id))) {
            $district = $this->setDistrict($address->district);
            $city = $this->setCity($address->city, $district);
            $street = $this->setStreet($address->street, $city);
            $house = $this->setHouse($address->house, $street);
            $address_entity = new Address();
            $address_entity->setStreet($street);
            $address_entity->setCity($city);
            $address_entity->setDistrict($district);
            $address_entity->setHouse($house);
            $address_entity->setFlat($address->flat);
            $this->entityManager->persist($address_entity);
            $this->entityManager->flush();
        }

        return $address_entity;
    }

    public function setDistrict(\stdClass $district_object)
    {
        $repo = $this->entityManager->getRepository('ODADneprMockServiceBundle:District');
        if (!($district = $repo->find($district_object->id))) {
            $district = new District();
            $district->setName($district_object->name);
            $this->entityManager->persist($district);
            $this->entityManager->flush();
        }

        return $district;
    }

    public function setCity(\stdClass $city_object, District $district)
    {
        $repo = $this->entityManager->getRepository('ODADneprMockServiceBundle:City');
        if (!($city = $repo->find($city_object->id))) {
            $city = new City();
            $city->setName($city_object->name);
            $city->setDistrict($district);
            $this->entityManager->persist($city);
            $this->entityManager->flush();
        }

        return $city;
    }

    public function setStreet(\stdClass $street_object, City $city)
    {
        $repo = $this->entityManager->getRepository('ODADneprMockServiceBundle:Street');
        if (!($street = $repo->find($street_object->id))) {
            $street = new Street();
            $street->setName($street_object->name);
            $street->setCity($city);
            $this->entityManager->persist($street);
            $this->entityManager->flush();
        }

        return $street;
    }

    public function setHouse(\stdClass $house_object, Street $street)
    {
        $repo = $this->entityManager->getRepository('ODADneprMockServiceBundle:House');
        if (!($house = $repo->find($house_object->id))) {
            $house = new House();
            $house->setName($house_object->name);
            $house->setStreet($street);
            $this->entityManager->persist($house);
            $this->entityManager->flush();
        }

        return $house;
    }

    public function getUser(\stdClass $user_object)
    {
        $repo = $this->entityManager->getRepository('ODADneprMockServiceBundle:User');

        if ($user = $repo->find($user_object->id)) {
            return $user;
        }

        throw new BadRequestHttpException("User not found.");
    }
}
